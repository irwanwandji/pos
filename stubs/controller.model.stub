<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use Illuminate\Support\Facades\Validator;

class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        ${{ modelVariable }}s = {{ model }}::all();

        $data = [
            // Isi data kirim ke view
            '{{modelVariable}}s' => ${{ modelVariable }}s,
        ];
        return view('admin.{{ modelVariable }}.index')->with($data);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('admin.{{ modelVariable }}.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{ namespacedStoreRequest }}  $request
     * @return \Illuminate\Http\Response
     */
    public function store({{ storeRequest }} $request)
    {
        $rules = [
            // Rule validasi
            '' => '',
            '' => '',
            '' => '',
        ];

        $messages = [
            // Message error validasi
            '' => '',
            '' => '',
            '' => '',
        ];

        $validator = Validator::make($request->all(), $rules, $messages);

        if($validator->fails()) {
            // jika data tidak valid
            return redirect()
                ->route('{{ modelVariable }}.create')
                ->withErrors($validator);
        } else {
            // jika data valid
            // simpan ke database
            ${{ modelVariable }} = new {{ model }};
            // Input nilai sesuai field model
            // ${{ modelVariable }}->... = $request->input('');
            // ${{ modelVariable }}->... = $request->input('');
            // ..
            // ..
            // ..
            // ${{ modelVariable }}->save();

            return redirect()->route('{{ modelVariable }}.index')->with('message','{{ modelVariable }} successfully saved');
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        return view('admin.{{ modelVariable }}.show')->with('{{ modelVariable }}', ${{ modelVariable }});
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function edit({{ model }} ${{ modelVariable }})
    {
        return view('admin.{{ modelVariable }}.edit')->with('{{ modelVariable }}', ${{ modelVariable }});
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \{{ namespacedUpdateRequest }}  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }})
    {
        $rules = [
            // Rule validasi
            '' => '',
            '' => '',
            '' => '',
        ];

        $messages = [
            // Message error validasi
            '' => '',
            '' => '',
            '' => '',
        ];

        $validator = Validator::make($request->all(), $rules, $messages);

        if($validator->fails()) {
            // jika data tidak valid
            return redirect()
                ->route('{{ modelVariable }}.edit')
                ->withErrors($validator);
        } else {
            // jika data valid
            // simpan ke database

            // Input nilai sesuai field model
            // ${{ modelVariable }}->... = $request->input('');
            // ${{ modelVariable }}->... = $request->input('');
            // ..
            // ..
            // ..
            // ${{ modelVariable }}->save();

            return redirect()->route('{{ modelVariable }}.index')->with('message','{{ modelVariable }} successfully updated');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\Response
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();

        return redirect()->route('{{ modelVariable }}.index')->with('message','{{ modelVariable }} successfully deleted');
    }
}
